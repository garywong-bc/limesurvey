---
kind: Template
apiVersion: v1
metadata:
  name: nrm-limesurvey-mysql-dc
parameters:
  - description: The short-name of the Survey Service, lower-case with hyphen.
    displayName: Survey Name
    name: SURVEY_NAME
    required: true
    value: mds
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Password for the mysql connection user.
    displayName: mysql Connection Password
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: MYSQL_PASSWORD
    required: true
  - description: Password for the mysql root user.
    displayName: mysql root Password
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: MYSQL_ROOT_PASSWORD
    required: true
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Database Volume Capacity
    name: DB_VOLUME_CAPACITY
    required: true
    value: 1Gi
objects:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${SURVEY_NAME}limesurvey-mysql"
      labels:
        app: "${SURVEY_NAME}limesurvey"
      annotations:
        description: Database credentials and name.
        template.openshift.io/expose-database_name: "{.data['database-name']}"
        template.openshift.io/expose-password: "{.data['database-password']}"
        template.openshift.io/expose-root_password: "{.data['database-root-password']}"
        template.openshift.io/expose-username: "{.data['database-user']}"
    stringData:
      database-name: "${SURVEY_NAME}"
      database-password: "${MYSQL_PASSWORD}"
      database-root-password: "${MYSQL_ROOT_PASSWORD}"
      database-user: "${SURVEY_NAME}"
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "${SURVEY_NAME}limesurvey-mysql"
      labels:
        app: "${SURVEY_NAME}limesurvey"
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${DB_VOLUME_CAPACITY}"
      storageClassName: netapp-file-standard
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: "${SURVEY_NAME}limesurvey-mysql"
      labels:
        app: "${SURVEY_NAME}limesurvey"
      annotations: {}
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${SURVEY_NAME}limesurvey-mysql"
            from:
              kind: ImageStreamTag
              namespace: openshift
              name: "mysql:8.0-el8"
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        app: "${SURVEY_NAME}limesurvey"
        deploymentconfig: "${SURVEY_NAME}limesurvey-mysql"
      template:
        metadata:
          creationTimestamp:
          labels:
            app: "${SURVEY_NAME}limesurvey"
            deploymentconfig: "${SURVEY_NAME}limesurvey-mysql"
          annotations: {}
        spec:
          volumes:
            - name: mysql-data
              persistentVolumeClaim:
                claimName: "${SURVEY_NAME}limesurvey-mysql"
          containers:
            - name: "${SURVEY_NAME}limesurvey-mysql"
              image: " "
              ports:
                - containerPort: 3306
                  protocol: TCP
              env:
                - name: MYSQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: "${SURVEY_NAME}limesurvey-mysql"
                      key: database-name
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${SURVEY_NAME}limesurvey-mysql"
                      key: database-password
                - name: MYSQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${SURVEY_NAME}limesurvey-mysql"
                      key: database-user
                - name: MYSQL_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${SURVEY_NAME}limesurvey-mysql"
                      key: database-root-password
              resources:
                limits:
                  memory: "${MEMORY_LIMIT}"
              volumeMounts:
                - name: mysql-data
                  mountPath: "/var/lib/mysql/data"
              livenessProbe:
                exec:
                  command:
                    - /bin/sh
                    - "-i"
                    - "-c"
                    - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
                initialDelaySeconds: 30
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - "-i"
                    - "-c"
                    - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${SURVEY_NAME}limesurvey-mysql"
      labels:
        app: "${SURVEY_NAME}limesurvey"
      annotations: {}
    spec:
      ports:
        - name: 3306-tcp
          protocol: TCP
          port: 3306
          targetPort: 3306
      selector:
        app: "${SURVEY_NAME}limesurvey"
        deploymentconfig: "${SURVEY_NAME}limesurvey-mysql"
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}
